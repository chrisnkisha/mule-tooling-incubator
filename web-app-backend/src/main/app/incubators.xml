<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="EE-3.5.0" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/1.0/mule-objectstore.xsd">
    <apikit:config name="apiConfig" raml="incubators.raml" consoleEnabled="true" consolePath="console" doc:name="Router" />
    <apikit:mapping-exception-strategy name="apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    <data-mapper:config name="new_mapping_1_grf" transformationGraphPath="new_mapping_1.grf" doc:name="DataMapper" />
    <flow name="main" doc:name="main">
        <http:inbound-endpoint address="http://localhost:8081/api" doc:name="HTTP" />
        <apikit:router config-ref="apiConfig" doc:name="APIkit Router" />
        <exception-strategy ref="apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="lookupInstallationsCount" doc:name="lookupInstallationsCount">
        <objectstore:retrieve config-ref="ObjectStore" key="#[payload]" defaultValue-ref="#[new Integer(0)]" doc:name="ObjectStore"/>
    </flow>

    <flow name="get:/updateSites:apiConfig" doc:name="get:/updateSites:apiConfig">
        <set-variable variableName="result" value="#[new java.util.HashMap()]" doc:name="Variable"/>
        <objectstore:all-keys config-ref="updateSites" doc:name="ObjectStore"/>
        <foreach doc:name="For Each">
            <choice doc:name="Choice">
                <when expression="#[ payload.startsWith(&quot;__us&quot;) ]">
                    <set-variable variableName="key" value="#[payload]" doc:name="Variable"/>
                    <objectstore:retrieve config-ref="updateSites" key="#[payload]" defaultValue-ref="#[string:&quot;&quot;]" doc:name="ObjectStore"/>
                    <expression-component doc:name="Expression"><![CDATA[result.put(key.replace("__us",""), payload.replace("\n","").replace("__us",""))]]></expression-component>
                </when>
                <otherwise>
                    <logger message="Ignored #[payload]" level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
        <set-payload value="#[result]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/updateSites/{updateSiteId}/plugins:apiConfig" doc:name="get:/updateSites/{updateSiteId}/plugins:apiConfig">
        <objectstore:retrieve config-ref="updateSites" key="#[&quot;__us&quot; + updateSiteId]" doc:name="ObjectStore" defaultValue-ref="#[string:none]"/>
        <choice doc:name="Choice">
            <when expression="#[!(payload.equals('none'))]">
                <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://#[json:url]/content.xml" doc:name="HTTP"/>
                <data-mapper:transform config-ref="new_mapping_1_grf" returnClass="java.lang.String" doc:name="DataMapper"/>
            </when>
            <otherwise>
                <logger message="Update site  #[updateSiteId] does not exist" level="ERROR" doc:name="Logger"/>
                <set-payload value="#[string:{}]" doc:name="Set Payload"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="post:/updateSites/{updateSiteId}/plugins/{pluginId}/incrementInstallationCount:apiConfig" doc:name="post:/updateSites/{updateSiteId}/plugins/{pluginId}/incrementInstallationCount:apiConfig">
        <objectstore:retrieve config-ref="ObjectStore" key="#[pluginId]" doc:name="ObjectStore" defaultValue-ref="#[new Integer(0)]" targetProperty="count" />
        <choice doc:name="Choice">
            <when expression="#[payload==0]">
                <objectstore:store config-ref="ObjectStore" key="#[pluginId]" value-ref="#[payload+1]" doc:name="ObjectStore" />
            </when>
            <otherwise>
                <set-variable variableName="count" value="#[payload+1]" doc:name="Variable" />
                <objectstore:remove config-ref="ObjectStore" key="#[pluginId]" doc:name="ObjectStore" />
                <objectstore:store config-ref="ObjectStore" key="#[pluginId]" value-ref="#[count]" doc:name="ObjectStore" />
            </otherwise>
        </choice>
    </flow>
    
</mule>
